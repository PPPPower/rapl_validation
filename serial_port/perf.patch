diff -ur blah/linux-4.1.5/tools/perf/builtin-stat.c linux-4.1.5/tools/perf/builtin-stat.c
--- blah/linux-4.1.5/tools/perf/builtin-stat.c	2015-08-10 15:22:34.000000000 -0400
+++ linux-4.1.5/tools/perf/builtin-stat.c	2016-06-21 17:12:49.900261237 -0400
@@ -622,6 +622,81 @@
 	workload_exec_errno = info->si_value.sival_int;
 }
 
+
+/***********************/
+/* VMW DTR TOGGLE CODE */
+/***********************/
+static int vmw_dtr_toggle(int length) {
+
+
+	int fd,result,sstatus;
+	char serial_name[]="/dev/ttyUSB0";
+	struct termios attr;
+	struct termios oldterminfo;
+
+	/* Open serial port */
+        fd = open(serial_name, O_RDWR);
+        if (fd<0) {
+                fprintf(stderr,"Error opening %s: %s\n",
+                        serial_name,strerror(errno));
+                return -1;
+        }
+
+        /* Save existing terminfo */
+        result = tcgetattr(fd, &oldterminfo);
+        if (result<0) {
+                fprintf(stderr,"Error tcgetattr(): %s\n",
+                        strerror(errno));
+                return -1;
+        }
+	/* Set to use hardware flow control */
+        attr = oldterminfo;
+        attr.c_cflag |= CRTSCTS | CLOCAL;
+        attr.c_oflag = 0;
+
+        /* Flush */
+        result = tcflush(fd, TCIOFLUSH);
+        if (result<0) {
+                fprintf(stderr,"ERROR tcflush() :%s\n",
+                        strerror(errno));
+                return -1;
+        }
+	/* Push out change immediately */
+        result=tcsetattr(fd, TCSANOW, &attr);
+        if (result<0) {
+                fprintf(stderr,"ERROR: tcsetattr() :%s\n",
+                        strerror(errno));
+                return -1;
+        }
+
+	result=ioctl(fd, TIOCMGET, &sstatus);
+	sstatus &= ~TIOCM_DTR;
+	result=ioctl(fd, TIOCMSET, &sstatus);
+
+
+//        set_RTS(fd, 0);
+        usleep(length);
+//        set_RTS(fd, 1);
+
+	sstatus |= TIOCM_DTR;
+	result=ioctl(fd, TIOCMSET, &sstatus);
+
+
+        /* Restore termio settings */
+        tcsetattr(fd, TCSANOW, &oldterminfo);
+
+        /* Close the port */
+        close(fd);
+
+	return 0;
+}
+
+/***************************/
+/* END VMW DTR TOGGLE CODE */
+/***************************/
+
+
+
 static int __run_perf_stat(int argc, const char **argv)
 {
 	char msg[512];
@@ -759,10 +834,14 @@
 	if (sync_run)
 		sync();
 
+	vmw_dtr_toggle(5000);
+
 	ret = __run_perf_stat(argc, argv);
 	if (ret)
 		return ret;
 
+	vmw_dtr_toggle(5000);
+
 	if (post_cmd) {
 		ret = system(post_cmd);
 		if (ret)
@@ -1062,7 +1141,7 @@
 	int cpu = cpu_map__id_to_cpu(id);
 
 	if (csv_output) {
-		fmt = sc != 1.0 ?  "%.2f%s" : "%.0f%s";
+		fmt = sc != 1.0 ?  "%.6f%s" : "%.0f%s";
 	} else {
 		if (big_num)
 			fmt = sc != 1.0 ? "%'18.2f%s" : "%'18.0f%s";
@@ -1887,7 +1966,7 @@
 		}
 		goto out;
 	}
-	if (interval && interval < 100) {
+	if (interval && interval < 10) {
 		pr_err("print interval must be >= 100ms\n");
 		parse_options_usage(stat_usage, options, "I", 1);
 		goto out;
@@ -1933,3 +2012,4 @@
 	perf_evlist__delete(evsel_list);
 	return status;
 }
+
